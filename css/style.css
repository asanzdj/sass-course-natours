@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInBottom {
  0% {
    transform: translateY(10rem);
    opacity: 0; }
  100% {
    transform: translateY(0);
    opacity: 1; } }

*,
*::after,
*::before {
  box-sizing: inherit;
  margin: 0;
  padding: 0; }

html {
  font-size: 62.5%; }

body {
  padding: 3rem;
  box-sizing: border-box; }

body {
  color: #777;
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7; }

.Header__TextBox {
  left: 50%;
  position: absolute;
  text-align: center;
  top: 40%;
  transform: translate(-50%, -40%); }

.Heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden; }
  .Heading-primary--main {
    animation-timing-function: ease-out;
    animation: moveInLeft 2s;
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem; }
  .Heading-primary--sub {
    animation: moveInRight 2s;
    display: block;
    font-size: 2rem;
    font-weight: 400;
    letter-spacing: 1.74rem;
    margin-bottom: 6rem; }

.Button {
  border-radius: 10rem;
  display: inline-block;
  padding: 1.5rem 4rem;
  transition: transform 0.2s;
  /* Has to be in the initial state */
  position: relative;
  animation: moveInBottom 2s ease-out 0.75s; }
  .Button:link, .Button:visited {
    text-transform: uppercase;
    text-decoration: none; }
  .Button:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .Button:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .Button:active {
    /* When button is clicked */
    transform: translateY(-0.1rem);
    /* This is apply hover initial state, it not uses -3px */
    box-shadow: 0 1rem 1rem rgba(0, 0, 0, 0.2); }
  .Button::after {
    content: '';
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s; }
  .Button--white {
    background: #fff;
    color: #777; }
    .Button--white::after {
      background: #fff; }
  .Button--animated {
    transition: transform 0.4s;
    animation-fill-mode: backwards; }

.row {
  background: #eee;
  margin: 0 auto;
  max-width: 114rem;
  /*
    ^ -> classes starting with this statement
    * -> classes contains this statement
  */ }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    background: orangered;
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }

.Header {
  background-position: top;
  background-size: cover;
  background: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../../img/hero.jpg");
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  height: 95vh;
  position: relative; }
  .Header__Logo-box {
    left: 4rem;
    position: absolute;
    top: 4rem; }
  .Header__Logo {
    height: 3.5rem; }
